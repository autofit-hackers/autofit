version: '3.8'

services:
  django:
    container_name: posefit_django
    build:
      context: ../django
      dockerfile: ../django/Dockerfile.debug
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ../django:/usr/src/app/
    ports:
      - 8000:8000
      - 8888:8888 # for vscode debug
    env_file:
      - ../django/.env
    depends_on:
      - postgres

  postgres:
    container_name: posefit_postgres
    build: ../postgres
    volumes:
      - postgres_sample_data:/var/lib/postgresql/data
      - ../postgres/sql:/docker-entrypoint-initdb.d
    env_file: ../postgres/.env_db
    ports:
      - 5433:5432

volumes:
  postgres_sample_data:

# app:
#   build: 
#     context: .
#     dockerfile: Dockerfile

#   volumes:
#     # Forwards the local Docker socket to the container.
#     - /var/run/docker.sock:/var/run/docker-host.sock 
#     # Update this to wherever you want VS Code to mount the folder of your project
#     - ..:/workspace:cached

#   # Overrides default command so things don't shut down after the process ends.
#   entrypoint: /usr/local/share/docker-init.sh
#   command: sleep infinity 

#   # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
#   # cap_add:
#   #  - SYS_PTRACE
#   # security_opt:
#   #   - seccomp:unconfined

#   # Uncomment the next line to use a non-root user for all processes.
#   # user: vscode

#   # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
#   # (Adding the "ports" property to this file will not forward from a Codespace.)
